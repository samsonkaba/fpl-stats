"use strict";

var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _coreWebpack = require("./core.webpack.config");

var _coreWebpack2 = _interopRequireDefault(_coreWebpack);

var _uglifyjsWebpackPlugin = require("uglifyjs-webpack-plugin");

var _uglifyjsWebpackPlugin2 = _interopRequireDefault(_uglifyjsWebpackPlugin);

var _ramda = require("ramda");

var R = _interopRequireWildcard(_ramda);

var _webpackBundleAnalyzer = require("webpack-bundle-analyzer");

var _copyWebpackPlugin = require("copy-webpack-plugin");

var _copyWebpackPlugin2 = _interopRequireDefault(_copyWebpackPlugin);

var _webpack = require("webpack");

var _webpack2 = _interopRequireDefault(_webpack);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var vendorChunkPlugins = [new _webpack2.default.optimize.CommonsChunkPlugin({
	name: "vendor",
	minChunks: Infinity
})];

var manifestChunkPlugin = new _webpack2.default.optimize.CommonsChunkPlugin({
	name: "manifest",
	minChunks: Infinity
});

var bundleAnalyzerPlugin = new _webpackBundleAnalyzer.BundleAnalyzerPlugin({
	analyzerMode: "static",
	openAnalyzer: false
});
var hashModuleIdsPlugin = new _webpack2.default.HashedModuleIdsPlugin();

var uglifyJsPlugin = new _uglifyjsWebpackPlugin2.default({
	uglifyOptions: {
		ecma: 8,
		compress: {
			warnings: false,
			comparisons: false
		},
		mangle: {
			safari10: true
		},
		output: {
			comments: false,
			ascii_only: true
		}
	},
	parallel: true,
	cache: true,
	sourceMap: true
});

var environmentVariablesPlugin = new _webpack2.default.DefinePlugin({
	"process.env": {
		NODE_ENV: "\"production\""
	}
});

module.exports = R.pipe.apply(R, [R.assoc("bail", true), (0, _coreWebpack.addPlugin)(hashModuleIdsPlugin), (0, _coreWebpack.addPlugin)(bundleAnalyzerPlugin), (0, _coreWebpack.addPlugin)(uglifyJsPlugin), (0, _coreWebpack.addPlugin)(environmentVariablesPlugin), (0, _coreWebpack.addPlugin)((0, _copyWebpackPlugin2.default)(["public"]))].concat((0, _toConsumableArray3.default)(vendorChunkPlugins.map(_coreWebpack.addPlugin)), [(0, _coreWebpack.addPlugin)(manifestChunkPlugin)]))(_coreWebpack2.default);